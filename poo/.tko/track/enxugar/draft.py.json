{
    "patches": [
        {
            "label": "2025-09-28_14-59-36",
            "content": "@@ -1,19 +1,20 @@\n class To\n-wel\n+alha\n :%0A    de\n@@ -513,24 +513,8 @@\n  30%0A\n-        return 0\n %0A   \n@@ -739,17 +739,16 @@\n   toalha\n- \n =Towel (\n@@ -917,19 +917,8 @@\n r%22: \n-#color,size\n  %0A  \n",
            "lines": "48"
        },
        {
            "label": "2025-09-28_17-28-00",
            "content": "@@ -816,40 +816,8 @@\n t()%0A\n-        print (%22$%22 + line) #eco%0A\n     \n",
            "lines": "48"
        },
        {
            "label": "2025-09-28_17-30-41",
            "content": "@@ -665,17 +665,16 @@\n n f%22Cor:\n- \n %7Bself.co\n@@ -687,17 +687,16 @@\n Tamanho:\n- \n %7Bself.si\n@@ -708,17 +708,16 @@\n Umidade:\n- \n %7Bself.we\n@@ -952,17 +952,16 @@\n gs %5B0%5D==\n- \n %22criar%22:\n@@ -991,19 +991,17 @@\n    color\n- = \n+=\n args%5B1%5D%0A\n@@ -1016,19 +1016,17 @@\n     size\n- = \n+=\n args%5B2%5D%0A\n@@ -1043,17 +1043,16 @@\n   toalha\n- \n = Towel(\n@@ -1060,11 +1060,9 @@\n olor\n- , \n+,\n size\n@@ -1086,17 +1086,16 @@\n gs %5B0%5D==\n- \n %22mostrar\n",
            "lines": "49"
        },
        {
            "label": "2025-09-28_17-32-16",
            "content": "@@ -1283,11 +1283,29 @@\n nt(%22\n-sim\n+fail:comando invalido\n %22)%0A%0A\n",
            "lines": "49"
        },
        {
            "label": "2025-09-28_17-32-39",
            "content": "@@ -1164,169 +1164,11 @@\n == %22\n-torcer%22:%0A             toalha.wringOut()%0A        elif  args%5B0%5D == %22seca%22:%0A            print (%22sim%22 if toalha.isDry()else %22n%C3%A3o%22 ) %0A        elif args %5B0%5D== %22enxugar\n+dry\n %22:# \n@@ -1281,33 +1281,13 @@\n rint\n- \n (%22\n-fail: comando invalido\n+sim\n %22)%0A%0A\n",
            "lines": "49"
        },
        {
            "label": "2025-10-04_22-02-26",
            "content": "@@ -1282,17 +1282,17 @@\n )else %22n\n-a\n+%C3%A3\n o%22 ) %0A  \n",
            "lines": "53"
        },
        {
            "label": "2025-10-04_22-02-57",
            "content": "@@ -258,145 +258,8 @@\n nt  \n-%0A        if self.wetness %3E= self.getMaxWetness():%0A            print (%22toalha encharcada%22)%0A            self.wetness = self.getMaxWetness()\n %0A%0A  \n",
            "lines": "53"
        },
        {
            "label": "2025-10-04_22-08-27",
            "content": "class Towel:\n    def __init__ (self, color:str, size:str):\n        self.color= str = color\n        self.size = str = size\n        self.wetness: int =0\n\n    def dry(self, amount:int) : # n\u00e3o pode fazer opera\u00e7\u00e3o dentro do parametro\n        self.wetness +=amount  \n        if self.wetness >= self.getMaxWetness():\n            print (\"toalha encharcada\")\n            self.wetness = self.getMaxWetness()\n\n    def  wringOut (self)-> None: \n        self.wetness =0   \n\n    def  getMaxWetness(self)->int:\n        if self.size == \"P\":\n            return 10\n        if self.size == \"M\" :\n            return 20\n        if self.size == \"G\" :\n            return 30\n        return 0\n    def isDry (self)-> bool:\n            return self.wetness==0         \n    \n    def __str__(self) -> str: # toString\n        return f\"Cor: {self.color}, Tamanho: {self.size}, Umidade: {self.wetness}\"\n    \n\n\ndef main ():\n    toalha =Towel (\"\", \"\")\n    while True:\n        line:str=input()\n        print (\"$\" + line) #eco\n        args: list[str]=line.split(\" \")\n        if args[0]==\"end\":\n            break\n        elif args [0]== \"criar\": #color,size \n            color = args[1]\n            size = args[2]\n            toalha = Towel(color , size)\n        elif args [0]== \"mostrar\":\n            print(toalha)\n        elif args [0]== \"torcer\":\n             toalha.wringOut()\n        elif  args[0] == \"seca\":\n            print (\"sim\" if toalha.isDry()else \"nao\" ) \n        elif args [0]== \"enxugar\":# amount\n            amount: int = int (args[1])\n            toalha.dry (amount)\n        else:\n            print (\"fail: comando invalido\")\n\nmain()            \n",
            "lines": "56"
        }
    ]
}