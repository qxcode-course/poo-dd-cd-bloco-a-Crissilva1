{
    "patches": [
        {
            "label": "2025-09-28_14-59-36",
            "content": "@@ -1,19 +1,20 @@\n class To\n-wel\n+alha\n :%0A    de\n@@ -513,24 +513,8 @@\n  30%0A\n-        return 0\n %0A   \n@@ -739,17 +739,16 @@\n   toalha\n- \n =Towel (\n@@ -917,19 +917,8 @@\n r%22: \n-#color,size\n  %0A  \n",
            "lines": "48"
        },
        {
            "label": "2025-09-28_17-28-00",
            "content": "@@ -816,40 +816,8 @@\n t()%0A\n-        print (%22$%22 + line) #eco%0A\n     \n",
            "lines": "48"
        },
        {
            "label": "2025-09-28_17-30-41",
            "content": "@@ -665,17 +665,16 @@\n n f%22Cor:\n- \n %7Bself.co\n@@ -687,17 +687,16 @@\n Tamanho:\n- \n %7Bself.si\n@@ -708,17 +708,16 @@\n Umidade:\n- \n %7Bself.we\n@@ -952,17 +952,16 @@\n gs %5B0%5D==\n- \n %22criar%22:\n@@ -991,19 +991,17 @@\n    color\n- = \n+=\n args%5B1%5D%0A\n@@ -1016,19 +1016,17 @@\n     size\n- = \n+=\n args%5B2%5D%0A\n@@ -1043,17 +1043,16 @@\n   toalha\n- \n = Towel(\n@@ -1060,11 +1060,9 @@\n olor\n- , \n+,\n size\n@@ -1086,17 +1086,16 @@\n gs %5B0%5D==\n- \n %22mostrar\n",
            "lines": "49"
        },
        {
            "label": "2025-09-28_17-32-16",
            "content": "@@ -1283,11 +1283,29 @@\n nt(%22\n-sim\n+fail:comando invalido\n %22)%0A%0A\n",
            "lines": "49"
        },
        {
            "label": "2025-09-28_17-32-39",
            "content": "@@ -1164,169 +1164,11 @@\n == %22\n-torcer%22:%0A             toalha.wringOut()%0A        elif  args%5B0%5D == %22seca%22:%0A            print (%22sim%22 if toalha.isDry()else %22n%C3%A3o%22 ) %0A        elif args %5B0%5D== %22enxugar\n+dry\n %22:# \n@@ -1281,33 +1281,13 @@\n rint\n- \n (%22\n-fail: comando invalido\n+sim\n %22)%0A%0A\n",
            "lines": "49"
        },
        {
            "label": "2025-10-04_22-02-26",
            "content": "@@ -1282,17 +1282,17 @@\n )else %22n\n-a\n+%C3%A3\n o%22 ) %0A  \n",
            "lines": "53"
        },
        {
            "label": "2025-10-04_22-02-57",
            "content": "@@ -258,145 +258,8 @@\n nt  \n-%0A        if self.wetness %3E= self.getMaxWetness():%0A            print (%22toalha encharcada%22)%0A            self.wetness = self.getMaxWetness()\n %0A%0A  \n",
            "lines": "53"
        },
        {
            "label": "2025-10-04_22-08-27",
            "content": "@@ -22,16 +22,17 @@\n __init__\n+ \n (self, c\n@@ -36,21 +36,19 @@\n , color:\n- \n str\n- \n , size:s\n@@ -70,18 +70,17 @@\n lf.color\n- :\n+=\n  str = c\n@@ -83,17 +83,16 @@\n  = color\n- \n %0A       \n@@ -102,17 +102,17 @@\n lf.size \n-:\n+=\n  str = s\n@@ -139,17 +139,15 @@\n ness\n- \n : int =\n- \n 0%0A%0A \n@@ -156,17 +156,16 @@\n  def dry\n- \n (self, a\n@@ -173,16 +173,61 @@\n ount\n- : \n+:\n int)\n-:\n+ : # n%C3%A3o pode fazer opera%C3%A7%C3%A3o dentro do parametro\n %0A   \n@@ -246,23 +246,24 @@\n tness +=\n- \n amount\n+  \n %0A       \n@@ -280,16 +280,17 @@\n etness %3E\n+=\n  self.ge\n@@ -393,25 +393,24 @@\n ness()%0A%0A\n-%0A\n     def \n wringOut\n@@ -401,16 +401,17 @@\n     def \n+ \n wringOut\n@@ -424,18 +424,18 @@\n )-%3E None\n- \n :\n+ \n %0A       \n@@ -449,18 +449,20 @@\n etness =\n- \n 0\n+   \n %0A%0A    de\n@@ -463,16 +463,17 @@\n     def \n+ \n getMaxWe\n@@ -481,34 +481,19 @@\n ness\n- \n (self\n-, getMaxWetness:\n+)-%3E\n int\n-)\n :%0A  \n@@ -568,16 +568,17 @@\n e == %22M%22\n+ \n :%0A      \n@@ -604,17 +604,16 @@\n      if \n- \n self.siz\n@@ -620,16 +620,17 @@\n e == %22G%22\n+ \n :%0A      \n@@ -644,18 +644,16 @@\n eturn 30\n-  \n %0A       \n@@ -661,22 +661,16 @@\n return 0\n-     %0A\n %0A    def\n@@ -684,16 +684,17 @@\n (self)-%3E\n+ \n bool:%0A  \n@@ -695,24 +695,28 @@\n ol:%0A        \n+   \n+ \n return self.\n@@ -726,18 +726,25 @@\n ness\n- \n ==0\n-%0A\n+  \n     \n-%0A\n+   %0A    \n %0A   \n@@ -761,18 +761,20 @@\n __(self)\n+ \n -%3E\n+ \n str: # t\n@@ -908,70 +908,30 @@\n l (%22\n- \n %22, %22\n- \n %22)\n-#3 objeto manipulado%0A    while True:# 4 loop infinito \n+%0A    while True:\n %0A   \n@@ -955,27 +955,8 @@\n ut()\n-#5 entrada de linha\n %0A   \n",
            "lines": "56"
        },
        {
            "label": "2025-10-05_18-13-45",
            "content": "@@ -872,11 +872,12 @@\n l (%22\n-%22 ,\n+ %22, \n %22 %22)\n",
            "lines": "59"
        },
        {
            "label": "2025-10-05_18-14-21",
            "content": "@@ -872,14 +872,12 @@\n l (%22\n- \n %22 ,%22\n- \n  %22)#\n",
            "lines": "59"
        },
        {
            "label": "2025-10-05_18-17-40",
            "content": "@@ -439,16 +439,35 @@\n ss (self\n+, getMaxWetness:int\n ):%0A     \n",
            "lines": "59"
        },
        {
            "label": "2025-10-05_18-17-44",
            "content": "@@ -240,17 +240,16 @@\n etness %3E\n-=\n  self.ge\n",
            "lines": "59"
        },
        {
            "label": "2025-10-05_18-20-38",
            "content": "class Towel:\n    def __init__(self, color: str , size:str):\n        self.color : str = color \n        self.size : str = size\n        self.wetness : int = 0\n\n    def dry (self, amount : int):\n        self.wetness += amount\n        if self.wetness >= self.getMaxWetness():\n            print (\"toalha encharcada\")\n            self.wetness = self.getMaxWetness()\n\n\n    def wringOut (self)-> None :\n        self.wetness = 0\n\n    def getMaxWetness (self):\n        if self.size == \"P\":\n            return 10\n        if self.size == \"M\":\n            return 20\n        if  self.size == \"G\":\n            return 30  \n        return 0     \n\n    def isDry (self)->bool:\n        return self.wetness ==0\n    \n\n    def __str__(self)->str: # toString\n        return f\"Cor: {self.color}, Tamanho: {self.size}, Umidade: {self.wetness}\"\n    \n\n\ndef main ():\n    toalha =Towel (\" \" ,\"  \")#3 objeto manipulado\n    while True:# 4 loop infinito \n        line:str=input()#5 entrada de linha\n        print (\"$\" + line) #eco\n        args: list[str]=line.split(\" \")\n        if args[0]==\"end\":\n            break\n        elif args [0]== \"criar\": #color,size \n            color = args[1]\n            size = args[2]\n            toalha = Towel(color , size)\n        elif args [0]== \"mostrar\":\n            print(toalha)\n        elif args [0]== \"torcer\":\n             toalha.wringOut()\n        elif  args[0] == \"seca\":\n            print (\"sim\" if toalha.isDry()else \"nao\" ) \n        elif args [0]== \"enxugar\":# amount\n            amount: int = int (args[1])\n            toalha.dry (amount)\n        else:\n            print (\"fail: comando invalido\")\n\nmain()            \n",
            "lines": "59"
        }
    ]
}