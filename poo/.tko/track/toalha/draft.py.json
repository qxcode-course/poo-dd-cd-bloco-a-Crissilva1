{
    "patches": [
        {
            "label": "2025-10-04_22-21-42",
            "content": "class Towel:    \n    def __init__(self, color: str, size: str): # constructor\n        self.color: str = color # atributos\n        self.size: str = size\n        self.wetness: int = 0\n\n    def dry(self, amount: int) -> None: #none n\u00e3o retorna nada, aqui a toalha enxuga\n        #determinada quantia- amount\n        self.wetness += amount #a toalha molhada vai somar a quantia-amount de agua que precisa enxugar\n        if self.wetness >= self.getMaxWetness(): #aqui relaciona a quantidade maxima de agua que ela absorve\n            #at\u00e9 enxarcar\n            print(\"toalha encharcada\")\n            self.wetness = self.getMaxWetness() # estorou o limite e enxarcou, aqui \u00e9 necessario voltar ao \n            #limite\n\n    def isDry(self) -> bool: #para saber se a toalha est\u00e1 seca, usa  booleano\n        return self.wetness == 0 # se estiver seca \u00e9 igual a 0, pois n\u00e3o est\u00e1 molhada\n    \n    def wringOut(self) -> None: # para secar a toalha\n        self.wetness = 0 #zerar a umidade da toalha\n\n    def getMaxWetness(self) -> int: # aqui n\u00e3o precisa do else, pois ao utilizar do return\n        # ele sai da fun\u00e7ao e ja entrega o retorno que o usuario pedir, fun\u00e7ao declarada como inteiro\n#precisa sempre de um retorno, utiliza t\u00e1mbem quando j\u00e1 sabe o valor definido, quando n\u00e3o retorna nada surge um undefinid\n        if self.size == \"P\":\n            return 10\n        if self.size == \"M\":\n            return 20\n        if self.size == \"G\":\n            return 30\n        return 0 #return undefinid\n\n    def __str__(self) -> str: # toString\n        return f\"Cor:{self.color}, Tam:{self.size}, Umidade:{self.wetness}\"\n \n\n\n\ndef main():#2\n    toalha =Towel (\"\", \"\") #3 objeto manipulado\n    while True:# 4 loop infinito \n        line: str = input() #5 entrada de linha\n        args: list[str]= line.split (\" \")\n        if args [0]==\"end\":\n            break\n        elif args [0] ==\"new\": # color size\n            color = args[1] # aqui define os paraemtros de cor e tamanho ex a cor no argumento 1\n            size = args[2]\n            toalha = Towel (color,size)\n        elif args[0]==\"show\":\n            print(toalha) \n        elif args [0]== \"torcer\":\n             toalha.wringOut()\n        elif  args[0] == \"seca\":\n            print (\"sim\" if toalha.isDry()else \"nao\" ) \n        elif args [0]== \"dry\":# amount\n            amount: int = int (args[1])\n            toalha.dry (amount)\n        else:\n            print(\"fail:comando invalido\")\n\n\nmain() #1           \n\n\n\n\n\n \nclass Towel:\n    def __init__(self):\n        self.color =\"black\"\n        self.size = \"p\"\n        self.wetness =0\n    def __str__(self):\n        return f\"color:{self.color}, tam:{self.size}, hum:{self.wetness}\"    \n\ntowel= Towel()\nprint(towel.color)\ntowel.color = \"yellow\"\nprint(towel.color)\nprint(towel.size)\nprint(towel.wetness)\n\n\n",
            "lines": "85"
        }
    ]
}